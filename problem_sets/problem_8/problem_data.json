{
  "index": 8,
  "sector": "math",
  "difficulty": "normal regularly encountered",
  "problem_statement": "Develop an algorithm using Python's NumPy and SciPy libraries to solve a 2D inverse kinematics problem involving a robotic arm with three joints. The robot's end-effector is constrained to move within the bounds of a rectangular region defined by the points (0, 0), (10, 0), (10, 5), and (0, 5) in its workspace.\nGiven that each joint has one degree of freedom, and assuming the arm's joints are revolute (rotational), you should derive an analytical solution to find the joint angles that satisfy the constraint of keeping the end-effector within the specified rectangular region. \nYour task is to create a Python script that:\n1.  Defines the function `inverse_kinematics` which takes as input the desired position of the end-effector (x, y) and outputs the joint angles.\n2.  Uses SciPy's `root_scalar` function to find the root of the equation that defines the relationship between joint angle and Cartesian coordinates for each joint.\n3.  Plots the workspace with the specified rectangular region using Matplotlib.\n4.  Creates a grid of points within the workspace, computes the corresponding joint angles for these points, and saves this data to a CSV file named 'joint_angles.csv'.\nAssume that the arm's joints are at fixed positions (0, 0), (1.5, 0), and (3, 2) relative to its base frame and have"
}