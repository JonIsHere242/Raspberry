{
  "index": 45,
  "sector": "coding",
  "difficulty": "very hard and challenging for anyone but the best to solve",
  "problem_statement": "## Complex Open-Ended Problem in Coding Sector\n### Problem Statement\nReplicate the implementation of a real-time anomaly detection system using historical stock data, akin to what is described in \"Financial Time Series Analysis by Example\" by Professor Robert P. Hogg's book on 'Real time Anomaly Detection'. Given a directory containing csv files with names like AAPL_2020.csv, GOOG_2021.csv, etc., where each file contains stock price data with columns of Date, Open, High, Low, Close and Volume. Develop an algorithm that can detect anomalies (e.g., unusually high or low trading volumes) in real-time using a moving window approach (7-day window for this problem).\n### Requirements\n*   Use Python 3.9 as the primary language.\n*   Utilize libraries such as Pandas, NumPy, and Scikit-learn for data manipulation and anomaly detection.\n*   Develop an efficient solution that can handle at least 1000 stock ticker files with 365 trading days each.\n*   Create a new CSV file called 'anomalies.csv' containing the ticker symbol of each detected anomaly along with its timestamp.\n### Additional Considerations\n*   Implement data normalization to ensure that the feature scaling is consistent across all stock tickers.\n*   Choose an appropriate threshold for determining anomalies based on historical data. You may need to experiment with different thresholds or use a statistical method such as the Z-score method to determine the anomaly score.\n*"
}