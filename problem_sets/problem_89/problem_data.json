{
  "index": 89,
  "sector": "heuristics",
  "difficulty": "very hard and challenging for anyone but the best to solve",
  "problem_statement": "**Problem: Heuristics-Based Stock Market Forecasting using Complex Network Analysis**\nIn the context of complex network analysis, replicate a scenario where you apply heuristics-based forecasting to predict future stock prices based on historical data and network interactions. Given a dataset containing daily stock prices for 50 major stocks (e.g., AAPL.csv, GOOG.csv, MSFT.csv) in the 'Stock_Prices' folder, which also includes a file named 'market_network.edgelist', where each row represents an interaction between two stocks with their respective weights.\n**Dataset Description:**\n- Each CSV file contains historical daily stock prices (Date, Open, High, Low, Close, Volume).\n- The market_network.edgelist file is in the format of \"source target weight\" indicating the influence one stock has on another based on historical price movements.\n**Objective:**\n1. **Network Construction**: Use a library like NetworkX to construct an undirected weighted graph from the market_network.edgelist, where each node represents a stock and the edges represent interactions between them.\n2. **Heuristics-Based Forecasting Model**: Develop a heuristics-based forecasting model that predicts future stock prices based on the constructed network. You can use any library or framework you prefer for machine learning (e.g., scikit-learn, TensorFlow).\n3. **Feature Engineering and Selection**: Engineer features from historical data to include in your model. This could involve calculating metrics like moving averages, RSI"
}