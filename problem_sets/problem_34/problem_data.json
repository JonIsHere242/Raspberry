{
  "index": 34,
  "sector": "factual",
  "difficulty": "nearly impossible",
  "problem_statement": "Develop a model that can forecast the daily trading volume of stocks based on historical data using an LSTM network. The model should take into account the seasonality of the stock's trading volume and handle missing values in the dataset.\nGiven a folder named 'stock_data' containing CSV files with names corresponding to their respective ticker symbols (e.g., AAPL.csv, GOOG.csv), create a Python script that loads the data from each file, preprocesses it by handling missing values and removing outliers, applies the LSTM model to forecast daily trading volume for each stock over the next 30 days, and saves the predicted volumes in a new CSV file named 'forecasted_volumes.csv' within the same folder.\nAssume that the historical data spans at least 2 years (approximately 250 trading days) and is stored in columns labeled 'Date', 'Open', 'High', 'Low', 'Close', and 'Volume'. The LSTM model should be implemented using the Keras library, and the data preprocessing steps should utilize the Pandas library. Ensure that your solution includes comments to explain the reasoning behind each step of the process.\n### Bonus:\nImplement a feature to visualize the historical trading volume of each stock alongside its forecasted volume over the next 30 days. Utilize the Matplotlib library for this purpose and save the visualizations as separate images named 'stock_{ticker}_volume_forecast.png' in the same folder.\n### Important:\nThe model should be able to handle stocks with varying frequencies"
}