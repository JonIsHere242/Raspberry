{
  "index": 46,
  "sector": "factual",
  "difficulty": "nearly impossible",
  "problem_statement": "#### Problem: Real-time Traffic Prediction Using Machine Learning and Sensor Data\nGiven a folder named 'Traffic_Data' containing CSV files with sensor data from traffic cameras, predict real-time traffic congestion levels using machine learning techniques.\n**Data Description:**\n- Each file has the following columns: Date, Time, Camera_ID, Speed, Occupancy, Road_Type.\n- The speed is measured in km/h and occupancy is a percentage value.\n- There are 20 cameras with IDs from C1 to C20.\n**Task:**\nUsing Python and the scikit-learn library, develop a model that can predict real-time traffic congestion levels for each camera based on historical data. The model should use a combination of supervised learning algorithms (Decision Trees, Random Forests) and unsupervised techniques (K-Means clustering).\n**Requirements:**\n1. Read sensor data from the CSV files in 'Traffic_Data' folder.\n2. Preprocess the data to handle missing values and normalize speed and occupancy features.\n3. Split the data into training (~70%) and testing sets (~30%).\n4. Use Decision Trees and Random Forests for supervised learning to predict congestion levels (high, medium, low) based on historical data.\n5. Apply K-Means clustering to group cameras with similar traffic patterns.\n6. Develop a function that takes the current time and sensor readings as input and returns predicted congestion levels for each camera.\n7. Create a new CSV file named 'congestion_levels"
}