{
  "index": 75,
  "sector": "coding",
  "difficulty": "extremely challenging but theoretically possible",
  "problem_statement": "Develop an AI system that utilizes deep learning to predict stock prices based on historical data from multiple sources. The system should integrate sentiment analysis from Twitter, news articles, and financial reports to generate a comprehensive view of market trends.\nGiven the following dataset folders:\n- `Twitter_Data`: CSV files containing tweets with metadata (e.g., date, time, user ID) in `{ticker}.csv` format.\n- `News_Articles`: A folder containing JSON files with news article data in `{ticker}_news.json` format.\n- `Financial_Reports`: A folder with PDF files of financial reports for each company in `{ticker}_financial_report.pdf` format.\n- `Historical_Data`: CSV files containing historical stock price data in `{ticker}.csv` format.\nDesign an architecture that leverages TensorFlow and Keras to:\n1. Preprocess the data from multiple sources (e.g., text normalization, tokenization).\n2. Train a deep learning model to predict stock prices based on integrated features (e.g., sentiment scores, time-series analysis).\n3. Integrate with a visualization tool (e.g., Matplotlib, Plotly) to display predicted price movements and real-time market trends.\nThe system should be able to handle multiple tickers simultaneously and generate predictions for the next trading day. The architecture should also include a mechanism for continuous learning and updating of models based on new data ingestion.\n**Requirements:**\n- Use TensorFlow 2.x with Keras API.\n- Utilize libraries such"
}